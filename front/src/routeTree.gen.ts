/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WriteLazyImport = createFileRoute('/write')()
const SignupLazyImport = createFileRoute('/signup')()
const SettingsLazyImport = createFileRoute('/settings')()
const IndexLazyImport = createFileRoute('/')()
const UserUsernameLazyImport = createFileRoute('/user/$username')()
const UserUsernamePostSlugLazyImport = createFileRoute(
  '/user/$username/$postSlug',
)()

// Create/Update Routes

const WriteLazyRoute = WriteLazyImport.update({
  path: '/write',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/write.lazy').then((d) => d.Route))

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserUsernameLazyRoute = UserUsernameLazyImport.update({
  path: '/user/$username',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user/$username.lazy').then((d) => d.Route),
)

const UserUsernamePostSlugLazyRoute = UserUsernamePostSlugLazyImport.update({
  path: '/user/$username/$postSlug',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/user_.$username.$postSlug.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/write': {
      id: '/write'
      path: '/write'
      fullPath: '/write'
      preLoaderRoute: typeof WriteLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/$username': {
      id: '/user/$username'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof UserUsernameLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/$username/$postSlug': {
      id: '/user/$username/$postSlug'
      path: '/user/$username/$postSlug'
      fullPath: '/user/$username/$postSlug'
      preLoaderRoute: typeof UserUsernamePostSlugLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  SettingsLazyRoute,
  SignupLazyRoute,
  WriteLazyRoute,
  UserUsernameLazyRoute,
  UserUsernamePostSlugLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/settings",
        "/signup",
        "/write",
        "/user/$username",
        "/user/$username/$postSlug"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    },
    "/write": {
      "filePath": "write.lazy.tsx"
    },
    "/user/$username": {
      "filePath": "user/$username.lazy.tsx"
    },
    "/user/$username/$postSlug": {
      "filePath": "user_.$username.$postSlug.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
